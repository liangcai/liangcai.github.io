<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo安装配置模板发布到github并绑定域名</title>
      <link href="/web/hexo/"/>
      <url>/web/hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo简介"><a href="#Hexo简介" class="headerlink" title="Hexo简介"></a>Hexo简介</h2><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200515013604.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/" target="_blank" rel="noopener">Markdown</a>（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><p>特点是生成的静态网页可以部署到github pages等免费服务器。网站程序和发布的内容分离，你可以在本地架设hexo环境，配置主题模板插件，编辑文章后，生成静态页面发布到互联网上。和传统的wordpress之类的博客相比，对服务器的环境要求很低，而且可以利用现有的github和码云的免费服务假设网站，也可以利用阿里云oss之类的服务发布生成的静态文件，相对于传统的服务器，成本也低很多，因为是静态网站，响应速度也会快很多。</p><h2 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h2><h4 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h4><ol><li>node环境</li><li><code>npm install -g hexo-cli</code></li></ol><h4 id="建站初始化"><a href="#建站初始化" class="headerlink" title="建站初始化"></a>建站初始化</h4><ol><li>创建一个站点，放在blog文件夹下，<code>hexo init blog &amp;&amp; cd blog &amp;&amp; npm install</code></li><li>修改配置文件 blog/_config.yml, <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">修改hexo网站配置</a></li></ol><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><h5 id="本地启动"><a href="#本地启动" class="headerlink" title="本地启动"></a>本地启动</h5><pre><code>hexo s    # 启动后可以直接在本地浏览器查看效果，http://localhost:4000/ ,非必须。</code></pre><h5 id="不启动直接创建文章（在hexo分支下操作）"><a href="#不启动直接创建文章（在hexo分支下操作）" class="headerlink" title="不启动直接创建文章（在hexo分支下操作）"></a>不启动直接创建文章（在hexo分支下操作）</h5><pre><code>hexo new &quot;a sample article&quot;    # 创建普通文章hexo new page --path about/me &quot;About me&quot;    # 创建about me页面# 用typora之类的外部编辑器编辑 ~/blog/source/about/me.mdhexo generate    #生成静态文件</code></pre><h3 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h3><h4 id="预览修改"><a href="#预览修改" class="headerlink" title="预览修改"></a>预览修改</h4><pre><code>hexo clean &amp;&amp; hexo g            # 清理并重新生成网站</code></pre><h4 id="安装主题（themes"><a href="#安装主题（themes" class="headerlink" title="安装主题（themes)"></a>安装主题（themes)</h4><ol><li><p>选择一个高质量主题 <a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">hexo-theme-matery</a></p></li><li><p><code>cd themes</code>切换到themes目录，<code>git clone https://github.com/blinkfox/hexo-theme-matery.git</code> 直接下载到主题文件夹</p></li><li><p>修改hexo的<code>_conifg.yml</code>和hexo-theme-matery模板下的_config.yml, 直接照<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">hexo-theme-matery官方文档</a>改就好了，具体设置有以下几块</p><ol><li>修改hexo配置，切换主题，设置分页等</li><li>新建各种功能页面，目录、标签、关于、留言板、友情链接等</li><li>修改模板<code>_config.yml</code>配置，导航菜单之类的设置</li><li>第三方插件安装和配置，代码高亮、内容搜索、中文链接转拼音、文章字数统计、emoji表情支持、rss订阅、在线聊天等</li><li>修改页脚，修改社交链接、打赏二维码图片、配置音乐播放器等</li></ol></li></ol><h3 id="发布到github或者其他服务"><a href="#发布到github或者其他服务" class="headerlink" title="发布到github或者其他服务"></a>发布到github或者其他服务</h3><h4 id="同步hexo编辑环境和文章"><a href="#同步hexo编辑环境和文章" class="headerlink" title="同步hexo编辑环境和文章"></a>同步hexo编辑环境和文章</h4><ol><li>创建仓库 githubname.github.io</li><li>创建两个分支：master和hexo，master存放编译后的文章，这个只要配置在_config.yml中，之后就有程序自动发布了，hexo存放网站原始文件，便于同步到其他设备编辑，日常操作都是在hexo分支上。</li><li>编辑hexo的配置文件，修改deploy项，指向自己的github page项目即可</li></ol><h4 id="更新并发布"><a href="#更新并发布" class="headerlink" title="更新并发布"></a>更新并发布</h4><pre><code>hexo clean &amp;&amp; hexo g # 更新并生成网站，本地查看hexo g -d    # 生成网站并发布到远程</code></pre><h3 id="github-page绑定域名"><a href="#github-page绑定域名" class="headerlink" title="github page绑定域名"></a>github page绑定域名</h3><p><a href="https://help.github.com/cn/github/working-with-github-pages/about-custom-domains-and-github-pages" target="_blank" rel="noopener">官方文档</a></p><ol><li>去github.com：在项目的settings &gt; Github Pages 设置域名后，自动在项目的根目录下生成了一个<code>CNAME</code>文件</li><li>去域名服务商处：添加cname记录，指向默认的github page域名，也就是 <code>用户名.github.io</code></li><li><strong>github绑定域名后，发布一次就会覆盖掉CNAME，导致域名绑定失败</strong>，解决办法是在source目录下新建CNAME文件，内容就是要绑定的域名，之后提交就不会清除域名绑定设置了</li></ol>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> web </tag>
            
            <tag> 博客 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用图床工具PicGo并配置阿里云oss作为付费图床，sm.ms作为免费图床</title>
      <link href="/web/aliyun_oss_picgo_smms_markdown/"/>
      <url>/web/aliyun_oss_picgo_smms_markdown/</url>
      
        <content type="html"><![CDATA[<h3 id="工具-PicGo"><a href="#工具-PicGo" class="headerlink" title="工具 PicGo"></a>工具 PicGo</h3><p><strong>PicGo: 一个用于快速上传图片并获取图片URL链接的工具</strong></p><p><strong>优点: 跨平台，可扩展， 使用方便，用户量大，稳定性高</strong></p><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200514011118.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p><p>考虑到稳定性和成本因素，使用一个付费图床和一个免费图床。使用阿里云oss作为付费图床，sm.ms作为免费图床。</p><h4 id="使用阿里云oss作为付费图床"><a href="#使用阿里云oss作为付费图床" class="headerlink" title="使用阿里云oss作为付费图床"></a>使用阿里云oss作为付费图床</h4><p>优点：阿里云在国内服务具有明显优势，oss对象存储价格相对透明，只要注意流量消耗不被盗链（这个注意下面的节流设置），基本成本是很低的。</p><ol><li><p><a href="https://www.aliyun.com/minisite/goods?userCode=5di2tyy8" target="_blank" rel="noopener">首先注册阿里云</a>，从推广链接注册有优惠</p></li><li><p>登陆后选择<code>存储与网络</code> &gt; <code>对象存储OSS</code> &gt; <code>进入对象存储面板</code></p><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200514014208.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p><p>3.<code>创建Bucket</code>, bucket就是仓库，你也可以创建多个仓库， 基本设置如图</p><ul><li><p>bucket名称：随便</p></li><li><p>区域：一般就近或者大城市</p></li><li><p>标准存储和低频访问对博客图床来说费用没差别，这里就用标准存储</p></li><li><p>读写权限，图床是对外的，所以选择公共读</p></li><li><p>其他选项按图或者默认即可</p></li></ul><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200514014816.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p><p>4.在<code>权限管理</code> –&gt; <code>Bucket授权策略</code> 中新增授权，根据引导创建一个子账号（也可以先在<code>访问控制RAM</code>中创建一个OSS专用的子账号），因为是用来上传图片的账号，注意权限选<code>读/写</code>。为了安全性考虑，最好是创建子账号给图床用。</p><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200514023242.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p><p>5.配置PicGo插件，关键的参数就是<code>KeyId</code>和<code>KeySecret</code></p><ul><li>存储空间名：即上面设置的Bucket名称</li><li>存储区域：上面选定地域后对应的Endpoint前面部分，即oss-cn-hangzhou 或 oss-cn-shenzhen等</li><li>路径：就是图片默认存储的文件夹，不填就是根目录，一般就是img或者image</li><li>网址后缀，用来设定外链图片的尺寸和质量等，这里我设置<code>?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60</code> </li><li><strong>获取KeyId和keySecret</strong>:  将鼠标放在右上方的用户名区域，在弹出的快捷菜单中选择<strong>accesskeys</strong>。选择<code>开始使用子用户AccessKey</code>, 然后在认证管理标签下为专用的子用户添加用户AccessKey，创建时记得存一份到电脑上。</li></ul><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200514015954.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p></li></ol><h5 id="流量优化"><a href="#流量优化" class="headerlink" title="流量优化"></a>流量优化</h5><p>oss以及其他同类型服务存储基本都是约等于免费，主要成本就是外链图片的流量成本。</p><ol><li><p>为了节约流量避免少数几个大图跑了流量，图床的图片链接加上优化参数，固定图片宽度（优化博文排版和降低图片存储大小）和降低图片质量（对视觉影响不大，对图片存储大小影响巨大）。在外链图片地址添加图片后缀<code>?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60</code>，自动拷贝的图片都是最大800宽度，标准质量60%的图片。更多的参数设置可以参考<a href="https://help.aliyun.com/document_detail/44686.html" target="_blank" rel="noopener">官方图片处理指南</a>，截图2mb的图片，上传仍为原始图片，加参数外链只有1~200kb了。优点是保留了原始图片，需要高清图的时候删掉外链的参数即可。</p></li><li><p>PicGo第三方压缩插件，直接再PicGo界面，插件设置中搜索安装即可，如果无法安装，可以点击访问插件主界面参考官方指引。和上面的外链参数可以配合使用，也可以任意使用一个，这个是上传之前压缩，缺点是会压缩原始图片，但节约了上传流量（基本不要钱）。</p><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200514021453.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p></li><li><p>防盗链，在阿里云oss的bucket管理界面，选择权限管理，设置防盗链，指定域名可以访问即可，<a href="https://help.aliyun.com/document_detail/31869.html?spm=5176.8466010.referer.1.39c71450JNSCGM" target="_blank" rel="noopener">详细设置文档</a></p><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200514021100.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p></li></ol><h4 id="使用免费的sm-ms图床"><a href="#使用免费的sm-ms图床" class="headerlink" title="使用免费的sm.ms图床"></a>使用免费的sm.ms图床</h4><p>直接注册一个账号即可，注意注册页面可能有脚本无法载入，如果无法提交注册信息请先用网络工具切换一下，注册验证邮箱之后，在dashborad，点击<code>API Token</code>，创建一个token即可。</p><h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ol><li>使用系统截图功能 win + shift + s截图后，点击即可简单标注，之后直接点击PicGo上传区的<code>剪贴板图片</code>就会自动上传，然后根据左侧的链接类型，直接粘贴到使用的地方即可</li></ol><p><img src="https://trycl-image-bucket.oss-cn-shenzhen.aliyuncs.com/img/20200514022403.png?x-oss-process=image/auto-orient,1/resize,m_lfit,w_800/quality,Q_60" alt=""></p><ol start="2"><li>配合同样跨平台的typora用markdown方式写日记或者博客，直接拷贝markdwon标记，可以快捷贴图</li><li>PicGo完整使用和配置文档：<a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html" target="_blank" rel="noopener">https://picgo.github.io/PicGo-Doc/zh/guide/config.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 博客 </tag>
            
            <tag> Markdown </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/uncategorized/hello_world/"/>
      <url>/uncategorized/hello_world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
